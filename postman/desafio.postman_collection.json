{
	"info": {
		"_postman_id": "77a5601c-4371-4b74-84b4-1fe10fbe8938",
		"name": "Desafio",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18811794",
		"_collection_link": "https://warped-station-2849.postman.co/workspace/Narwal~66b13858-df98-40e5-adfd-bd150b82ca1b/collection/18811794-77a5601c-4371-4b74-84b4-1fe10fbe8938?action=share&source=collection_link&creator=18811794"
	},
	"item": [
		{
			"name": "Cria Repositorio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"const response = pm.response.json();",
							"",
							"pm.collectionVariables.set(\"repo\", response.name)",
							"",
							"pm.test('O ID do repositório deve ser um número', function () {",
							"    pm.expect(response.id).to.be.a('number');",
							"})",
							"",
							"pm.test('O repositório não deve ser privado', function () {",
							"    pm.expect(response.private).to.be.false;",
							"})",
							"",
							"pm.test('O login do owner deve ser uma string não vazia', function () {",
							"    pm.expect(response.owner.login).to.be.a('string').and.to.not.be.empty;",
							"})",
							"",
							"pm.test('A resposta não deve ser vazia', function () {",
							"    pm.expect(response).to.not.be.empty;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"",
							"const timestamp = new Date().toISOString().replace(/[:.]/g, \"-\");",
							"",
							"pm.collectionVariables.set(\"name\", \"Desafio-Narwal\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "token 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",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{name}}{{$timestamp}}\",\n    \"description\": \"Repositório criado via Postman\", \n    \"private\": false \n}\n\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/user/repos",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"user",
						"repos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Consulta Repositorio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()",
							"",
							"pm.test('O campo \\'name\\' não deve ser vazio', function () {",
							"    pm.expect(response.name).to.not.be.empty",
							"})",
							"",
							"pm.test(\"Verificar se o repositório é público\", function () {",
							"    pm.expect(response.private).to.equal(false);",
							"})",
							"",
							"pm.test('A resposta não deve ser vazia', function () {",
							"    pm.expect(response).to.not.be.empty;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "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",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/repos/{{git}}/{{repo}}",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"{{git}}",
						"{{repo}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cria Issue",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test('A resposta não deve ser vazia', function () {",
							"    pm.expect(response).to.not.be.empty;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Primeira Issue\",\n  \"body\": \"Essa é uma issue criada via Postman\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/repos/{{git}}/{{repo}}/issues",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"{{git}}",
						"{{repo}}",
						"issues"
					]
				}
			},
			"response": []
		},
		{
			"name": "Consulta Issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()",
							"",
							"pm.test('O campo \\'title\\' não deve ser vazio', function () {",
							"    pm.expect(response[0].title).to.not.be.empty",
							"})",
							"",
							"pm.test('A resposta não deve ser vazia', function () {",
							"    pm.expect(response).to.not.be.empty;",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.github.com/repos/{{git}}/{{repo}}/issues",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"{{git}}",
						"{{repo}}",
						"issues"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exclui Repositorio",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/repos/{{git}}/{{repo}}",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"{{git}}",
						"{{repo}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Consulta Repositorio",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();",
							"",
							"pm.test('O status deve ser 404', function () {",
							"    pm.expect(pm.response.code).to.eql(404);",
							"})",
							"",
							"pm.test('A resposta não deve ser vazia', function () {",
							"    pm.expect(response).to.not.be.empty;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.github.com/repos/{{git}}/{{repo}}",
					"protocol": "https",
					"host": [
						"api",
						"github",
						"com"
					],
					"path": [
						"repos",
						"{{git}}",
						"{{repo}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{api_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "repoName",
			"value": ""
		},
		{
			"key": "nameRepo",
			"value": ""
		},
		{
			"key": "repo",
			"value": ""
		},
		{
			"key": "git",
			"value": "vasconcelos96"
		},
		{
			"key": "api_token",
			"value": "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"
		}
	]
}